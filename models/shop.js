// Generated by CoffeeScript 1.9.0
var BaseModel, Shop, dataRepository,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

BaseModel = require('../models/base');

dataRepository = require('../data/dataRepository');

Shop = (function(_super) {
  __extends(Shop, _super);

  function Shop(options) {
    Shop.__super__.constructor.call(this, options);
    if (options) {
      this.name = options.name;
    }
  }

  Shop.select = function(callback) {
    return dataRepository.shops.select({}, function(err, result) {
      var shop;
      return typeof callback === "function" ? callback(err, ((function() {
        var _i, _len, _results;
        if (result != null) {
          _results = [];
          for (_i = 0, _len = result.length; _i < _len; _i++) {
            shop = result[_i];
            _results.push(new Shop(shop));
          }
          return _results;
        }
      })())) : void 0;
    });
  };

  Shop.create = function(shop, callback) {
    return dataRepository.shops.create(shop, function(err, result) {
      return typeof callback === "function" ? callback(err, (result != null ? new Shop(result) : void 0)) : void 0;
    });
  };

  Shop.get = function(id, callback) {
    return dataRepository.shops.select({
      id: id
    }, function(err, result) {
      return typeof callback === "function" ? callback(err, (result != null ? new Shop(result) : void 0)) : void 0;
    });
  };

  Shop.update = function(shop) {
    return new Shop(dataRepository.shops.update(shop));
  };

  Shop.remove = function(id) {
    return new Shop(dataRepository.shops.remove(id));
  };

  return Shop;

})(BaseModel);

module.exports = Shop;
